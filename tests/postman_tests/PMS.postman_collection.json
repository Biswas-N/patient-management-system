{
	"info": {
		"_postman_id": "90122214-bbc9-49ed-bd9a-2a469c19ac3c",
		"name": "Patient-Management-System",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "Nurse Role",
			"item": [
				{
					"name": "Patient Endpoints",
					"item": [
						{
							"name": "(Nurse) Get All Patients",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "28424671-6e9e-45ec-b81c-c4c7e96098c9",
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"    pm.response.to.be.ok;\r",
											"    pm.response.to.be.json;\r",
											"})\r",
											"\r",
											"pm.test(\"Patients as list\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.patients).to.be.an('array');\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{heroku_url}}/api/patients",
									"host": [
										"{{heroku_url}}"
									],
									"path": [
										"api",
										"patients"
									]
								}
							},
							"response": []
						},
						{
							"name": "(Nurse) Get Single Patients",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "cdf7a332-6aa2-4bd6-8f75-eca2d17077e8",
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"    pm.response.to.be.ok;\r",
											"    pm.response.to.be.json;\r",
											"})\r",
											"\r",
											"pm.test(\"Patient as object\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.patient).to.be.an('object');\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{heroku_url}}/api/patients/1",
									"host": [
										"{{heroku_url}}"
									],
									"path": [
										"api",
										"patients",
										"1"
									]
								}
							},
							"response": []
						},
						{
							"name": "(Nurse) Create New Patient",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "0eb0fc5d-ad6b-4cd2-8625-d3c71c38e7f8",
										"exec": [
											"pm.test(\"Status code is 403\", function () {\r",
											"    pm.response.to.have.status(403);\r",
											"    pm.response.to.be.forbidden;\r",
											"    pm.response.to.be.json;\r",
											"})\r",
											"\r",
											"pm.test(\"Code is unauthorized\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.code).to.equal(\"unauthorized\")\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"name\": \"Jack Sparrow\",\r\n    \"age\": 42,\r\n    \"gender\": \"Male\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{heroku_url}}/api/patients",
									"host": [
										"{{heroku_url}}"
									],
									"path": [
										"api",
										"patients"
									]
								}
							},
							"response": []
						},
						{
							"name": "(Nurse) Update Patient",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "2c2f419c-b73c-4b82-85d7-02450013c593",
										"exec": [
											"pm.test(\"Status code is 403\", function () {\r",
											"    pm.response.to.have.status(403);\r",
											"    pm.response.to.be.forbidden;\r",
											"    pm.response.to.be.json;\r",
											"})\r",
											"\r",
											"pm.test(\"Code is unauthorized\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.code).to.equal(\"unauthorized\")\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PATCH",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "[\r\n    {\r\n        \"name\": \"Crosin\",\r\n        \"units\": \"125 ml\"\r\n    },\r\n    {\r\n        \"name\": \"Paracetamol\",\r\n        \"units\": \"1 tablet\"\r\n    }\r\n]",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{heroku_url}}/api/patients/1",
									"host": [
										"{{heroku_url}}"
									],
									"path": [
										"api",
										"patients",
										"1"
									]
								},
								"description": "Update the medication of a patient."
							},
							"response": []
						},
						{
							"name": "(Nurse) Delete Patient",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "21250e00-3aff-49f1-a350-76ac97edc232",
										"exec": [
											"pm.test(\"Status code is 403\", function () {\r",
											"    pm.response.to.have.status(403);\r",
											"    pm.response.to.be.forbidden;\r",
											"    pm.response.to.be.json;\r",
											"})\r",
											"\r",
											"pm.test(\"Code is unauthorized\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.code).to.equal(\"unauthorized\")\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{heroku_url}}/api/patients/1",
									"host": [
										"{{heroku_url}}"
									],
									"path": [
										"api",
										"patients",
										"1"
									]
								}
							},
							"response": []
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "Doctor Endpoints",
					"item": [
						{
							"name": "(Nurse) Get All Doctors",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "ffacb8a8-897b-4b56-b88b-b9fd5f80fcd3",
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"    pm.response.to.be.ok;\r",
											"    pm.response.to.be.json;\r",
											"})\r",
											"\r",
											"pm.test(\"Doctors as list\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.doctors).to.be.an('array');\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{heroku_url}}/api/doctors",
									"host": [
										"{{heroku_url}}"
									],
									"path": [
										"api",
										"doctors"
									]
								}
							},
							"response": []
						},
						{
							"name": "(Nurse) Get Single Doctors",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "e359d972-feee-4a48-b29c-11acb8e56161",
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"    pm.response.to.be.ok;\r",
											"    pm.response.to.be.json;\r",
											"})\r",
											"\r",
											"pm.test(\"Doctor as object\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.doctor).to.be.an('object');\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{heroku_url}}/api/doctors/1",
									"host": [
										"{{heroku_url}}"
									],
									"path": [
										"api",
										"doctors",
										"1"
									]
								}
							},
							"response": []
						},
						{
							"name": "(Nurse) Create New Doctor",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "cf1600af-fd5f-4eb0-9a16-49ef221456b9",
										"exec": [
											"pm.test(\"Status code is 403\", function () {\r",
											"    pm.response.to.have.status(403);\r",
											"    pm.response.to.be.forbidden;\r",
											"    pm.response.to.be.json;\r",
											"})\r",
											"\r",
											"pm.test(\"Code is unauthorized\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.code).to.equal(\"unauthorized\")\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"name\": \"Dr. Sparrow\",\r\n    \"age\": 42\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{heroku_url}}/api/doctors",
									"host": [
										"{{heroku_url}}"
									],
									"path": [
										"api",
										"doctors"
									]
								}
							},
							"response": []
						},
						{
							"name": "(Nurse) Update Doctor",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "ad6318dc-dff1-462c-aff7-9b641b22bdb0",
										"exec": [
											"pm.test(\"Status code is 403\", function () {\r",
											"    pm.response.to.have.status(403);\r",
											"    pm.response.to.be.forbidden;\r",
											"    pm.response.to.be.json;\r",
											"})\r",
											"\r",
											"pm.test(\"Code is unauthorized\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.code).to.equal(\"unauthorized\")\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PATCH",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"name\": \"Dr. Sparrow\",\r\n    \"age\": 42\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{heroku_url}}/api/doctors/1",
									"host": [
										"{{heroku_url}}"
									],
									"path": [
										"api",
										"doctors",
										"1"
									]
								},
								"description": "Update the medication of a patient."
							},
							"response": []
						},
						{
							"name": "(Nurse) Delete Doctor",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "1bced994-e829-46b5-8fcb-940c80ba49d0",
										"exec": [
											"pm.test(\"Status code is 403\", function () {\r",
											"    pm.response.to.have.status(403);\r",
											"    pm.response.to.be.forbidden;\r",
											"    pm.response.to.be.json;\r",
											"})\r",
											"\r",
											"pm.test(\"Code is unauthorized\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.code).to.equal(\"unauthorized\")\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{heroku_url}}/api/doctors/1",
									"host": [
										"{{heroku_url}}"
									],
									"path": [
										"api",
										"doctors",
										"1"
									]
								}
							},
							"response": []
						}
					],
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "004d1092-d8a7-4172-80fb-3a5e1529db20",
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "17312a1c-02ce-40a2-a63a-64825c08dfc7",
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				}
			],
			"description": "The expected API behaviour for the role Nurse",
			"auth": {
				"type": "bearer",
				"bearer": [
					{
						"key": "token",
						"value": "{{nurse_bearer_token}}",
						"type": "string"
					}
				]
			},
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"id": "f182c958-9ce8-4890-a574-63d23d0a074f",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"id": "284588a2-799f-42bd-9525-ceb86284762f",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "Doctor Role",
			"item": [
				{
					"name": "Patient Endpoints",
					"item": [
						{
							"name": "(Doctor) Get All Patients",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "1119a4da-81c4-495a-8ac5-618c7615bce9",
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"    pm.response.to.be.ok;\r",
											"    pm.response.to.be.json;\r",
											"})\r",
											"\r",
											"pm.test(\"Patients as list\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.patients).to.be.an('array');\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{heroku_url}}/api/patients",
									"host": [
										"{{heroku_url}}"
									],
									"path": [
										"api",
										"patients"
									]
								}
							},
							"response": []
						},
						{
							"name": "(Doctor) Get Single Patients",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "54482fef-0c69-4a46-83b9-b632a733bda1",
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"    pm.response.to.be.ok;\r",
											"    pm.response.to.be.json;\r",
											"})\r",
											"\r",
											"pm.test(\"Patient as object\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.patient).to.be.an('object');\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{heroku_url}}/api/patients/1",
									"host": [
										"{{heroku_url}}"
									],
									"path": [
										"api",
										"patients",
										"1"
									]
								}
							},
							"response": []
						},
						{
							"name": "(Doctor) Create New Patient",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "b22019e0-6fb7-4fad-941d-7b6574c2bbde",
										"exec": [
											"pm.test(\"Status code is 201\", function () {\r",
											"    pm.response.to.have.status(201);\r",
											"    pm.response.to.be.json;\r",
											"})\r",
											"\r",
											"pm.test(\"Patient as object\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.patient).to.be.an('object');\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"name\": \"Jack Sparrow\",\r\n    \"age\": 42,\r\n    \"gender\": \"Male\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{heroku_url}}/api/patients",
									"host": [
										"{{heroku_url}}"
									],
									"path": [
										"api",
										"patients"
									]
								}
							},
							"response": []
						},
						{
							"name": "(Doctor) Update Patient",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "44ab40cb-6ec5-41d1-80da-84d6885135ae",
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"    pm.response.to.be.ok;\r",
											"    pm.response.to.be.json;\r",
											"})\r",
											"\r",
											"pm.test(\"Patient as object\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.patient).to.be.an('object');\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PATCH",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "[\r\n    {\r\n        \"name\": \"Crosin\",\r\n        \"units\": \"125 ml\"\r\n    },\r\n    {\r\n        \"name\": \"Paracetamol\",\r\n        \"units\": \"1 tablet\"\r\n    }\r\n]",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{heroku_url}}/api/patients/1",
									"host": [
										"{{heroku_url}}"
									],
									"path": [
										"api",
										"patients",
										"1"
									]
								},
								"description": "Update the medication of a patient."
							},
							"response": []
						},
						{
							"name": "(Doctor) Delete Patient",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "0c7bb7b5-b8ca-4ff9-847b-ced0e3033b0e",
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"    pm.response.to.be.ok;\r",
											"    pm.response.to.be.json;\r",
											"})\r",
											"\r",
											"pm.test(\"Patient ID is 1\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.patient_id).to.equal(1);\r",
											"});"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "84d3d946-c4f5-4ecc-93ad-e394e77f4721",
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{heroku_url}}/api/patients/1",
									"host": [
										"{{heroku_url}}"
									],
									"path": [
										"api",
										"patients",
										"1"
									]
								}
							},
							"response": []
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "Doctor Endpoints",
					"item": [
						{
							"name": "(Doctor) Get All Doctors",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "7466304a-0531-4c31-92dc-749f7ac49a14",
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"    pm.response.to.be.ok;\r",
											"    pm.response.to.be.json;\r",
											"})\r",
											"\r",
											"pm.test(\"Doctors as list\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.doctors).to.be.an('array');\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{heroku_url}}/api/doctors",
									"host": [
										"{{heroku_url}}"
									],
									"path": [
										"api",
										"doctors"
									]
								}
							},
							"response": []
						},
						{
							"name": "(Doctor) Get Single Doctors",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "f7559b2b-dfd3-4de9-b315-c73be4a5c324",
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"    pm.response.to.be.ok;\r",
											"    pm.response.to.be.json;\r",
											"})\r",
											"\r",
											"pm.test(\"Doctor as object\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.doctor).to.be.an('object');\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{heroku_url}}/api/doctors/1",
									"host": [
										"{{heroku_url}}"
									],
									"path": [
										"api",
										"doctors",
										"1"
									]
								}
							},
							"response": []
						},
						{
							"name": "(Doctor) Create New Doctor",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "7df5b12a-d2ca-4f97-8e63-d738085f6b06",
										"exec": [
											"pm.test(\"Status code is 403\", function () {\r",
											"    pm.response.to.have.status(403);\r",
											"    pm.response.to.be.forbidden;\r",
											"    pm.response.to.be.json;\r",
											"})\r",
											"\r",
											"pm.test(\"Code is unauthorized\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.code).to.equal(\"unauthorized\")\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"name\": \"Dr. Sparrow\",\r\n    \"age\": 42\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{heroku_url}}/api/doctors",
									"host": [
										"{{heroku_url}}"
									],
									"path": [
										"api",
										"doctors"
									]
								}
							},
							"response": []
						},
						{
							"name": "(Doctor) Update Doctor",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "7d79776f-113d-4628-b28a-a18372eaf96a",
										"exec": [
											"pm.test(\"Status code is 403\", function () {\r",
											"    pm.response.to.have.status(403);\r",
											"    pm.response.to.be.forbidden;\r",
											"    pm.response.to.be.json;\r",
											"})\r",
											"\r",
											"pm.test(\"Code is unauthorized\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.code).to.equal(\"unauthorized\")\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PATCH",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"name\": \"Dr. Sparrow\",\r\n    \"age\": 42\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{heroku_url}}/api/doctors/1",
									"host": [
										"{{heroku_url}}"
									],
									"path": [
										"api",
										"doctors",
										"1"
									]
								},
								"description": "Update the medication of a patient."
							},
							"response": []
						},
						{
							"name": "(Doctor) Delete Doctor",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "54eb26ac-53f2-4cd4-863f-999609eb0ca8",
										"exec": [
											"pm.test(\"Status code is 403\", function () {\r",
											"    pm.response.to.have.status(403);\r",
											"    pm.response.to.be.forbidden;\r",
											"    pm.response.to.be.json;\r",
											"})\r",
											"\r",
											"pm.test(\"Code is unauthorized\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.code).to.equal(\"unauthorized\")\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{heroku_url}}/api/doctors/1",
									"host": [
										"{{heroku_url}}"
									],
									"path": [
										"api",
										"doctors",
										"1"
									]
								}
							},
							"response": []
						}
					],
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "9d3acf60-b870-47aa-93f7-9b6864f0b310",
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "bccb0c6f-6099-4eb5-a803-2ad5c1662aa0",
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				}
			],
			"description": "The expected API behaviour for the role Nurse",
			"auth": {
				"type": "bearer",
				"bearer": [
					{
						"key": "token",
						"value": "{{doctor_bearer_token}}",
						"type": "string"
					}
				]
			},
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"id": "e50abc2e-4d2a-4383-8580-7753660009f0",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"id": "478ba7ed-89c4-40c1-85c5-c0e511b1da10",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "Dean Role",
			"item": [
				{
					"name": "Patient Endpoints",
					"item": [
						{
							"name": "(Dean) Get All Patients",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "d65bcbe9-52a5-4c81-96ba-aab2899c59c3",
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"    pm.response.to.be.ok;\r",
											"    pm.response.to.be.json;\r",
											"})\r",
											"\r",
											"pm.test(\"Patients as list\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.patients).to.be.an('array');\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{heroku_url}}/api/patients",
									"host": [
										"{{heroku_url}}"
									],
									"path": [
										"api",
										"patients"
									]
								}
							},
							"response": []
						},
						{
							"name": "(Dean) Get Single Patients",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "cf7e1c4a-817a-4a23-b206-1d995fe44c63",
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"    pm.response.to.be.ok;\r",
											"    pm.response.to.be.json;\r",
											"})\r",
											"\r",
											"pm.test(\"Patient as object\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.patient).to.be.an('object');\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{heroku_url}}/api/patients/3",
									"host": [
										"{{heroku_url}}"
									],
									"path": [
										"api",
										"patients",
										"3"
									]
								}
							},
							"response": []
						},
						{
							"name": "(Dean) Create New Patient",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "84308122-9323-47e6-8822-8fda76770289",
										"exec": [
											"pm.test(\"Status code is 201\", function () {\r",
											"    pm.response.to.have.status(201);\r",
											"    pm.response.to.be.json;\r",
											"})\r",
											"\r",
											"pm.test(\"Patient as object\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.patient).to.be.an('object');\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"name\": \"Jack Sparrow\",\r\n    \"age\": 42,\r\n    \"gender\": \"Male\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{heroku_url}}/api/patients",
									"host": [
										"{{heroku_url}}"
									],
									"path": [
										"api",
										"patients"
									]
								}
							},
							"response": []
						},
						{
							"name": "(Dean) Update Patient",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "a80ae696-d098-41d8-8a8b-dedd70f213d5",
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"    pm.response.to.be.ok;\r",
											"    pm.response.to.be.json;\r",
											"})\r",
											"\r",
											"pm.test(\"Patient as object\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.patient).to.be.an('object');\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PATCH",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "[\r\n    {\r\n        \"name\": \"Crosin\",\r\n        \"units\": \"125 ml\"\r\n    },\r\n    {\r\n        \"name\": \"Paracetamol\",\r\n        \"units\": \"1 tablet\"\r\n    }\r\n]",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{heroku_url}}/api/patients/2",
									"host": [
										"{{heroku_url}}"
									],
									"path": [
										"api",
										"patients",
										"2"
									]
								},
								"description": "Update the medication of a patient."
							},
							"response": []
						},
						{
							"name": "(Dean) Delete Patient",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "c4f5629e-b535-4e4d-8c86-c14f560fdd32",
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"    pm.response.to.be.ok;\r",
											"    pm.response.to.be.json;\r",
											"})\r",
											"\r",
											"pm.test(\"Patient ID is 2\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.patient_id).to.equal(2);\r",
											"});"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "b4aebbba-c1fc-4216-adaf-7f1fd3b17793",
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{heroku_url}}/api/patients/2",
									"host": [
										"{{heroku_url}}"
									],
									"path": [
										"api",
										"patients",
										"2"
									]
								}
							},
							"response": []
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "Doctor Endpoints",
					"item": [
						{
							"name": "(Dean) Get All Doctors",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "724ec339-c19d-4643-974f-cbc01c2f1fcc",
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"    pm.response.to.be.ok;\r",
											"    pm.response.to.be.json;\r",
											"})\r",
											"\r",
											"pm.test(\"Doctors as list\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.doctors).to.be.an('array');\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{heroku_url}}/api/doctors",
									"host": [
										"{{heroku_url}}"
									],
									"path": [
										"api",
										"doctors"
									]
								}
							},
							"response": []
						},
						{
							"name": "(Dean) Get Single Doctors",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "b637a724-2f8b-422f-aeaa-7e2d500356f9",
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"    pm.response.to.be.ok;\r",
											"    pm.response.to.be.json;\r",
											"})\r",
											"\r",
											"pm.test(\"Doctor as object\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.doctor).to.be.an('object');\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{heroku_url}}/api/doctors/1",
									"host": [
										"{{heroku_url}}"
									],
									"path": [
										"api",
										"doctors",
										"1"
									]
								}
							},
							"response": []
						},
						{
							"name": "(Dean) Create New Doctor",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "46617d7e-7578-4866-85b2-543778bad734",
										"exec": [
											"pm.test(\"Status code is 201\", function () {\r",
											"    pm.response.to.have.status(201);\r",
											"    pm.response.to.be.json;\r",
											"})\r",
											"\r",
											"pm.test(\"Doctor as object\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.doctor).to.be.an('object');\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"name\": \"Dr. Sparrow\",\r\n    \"age\": 42\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{heroku_url}}/api/doctors",
									"host": [
										"{{heroku_url}}"
									],
									"path": [
										"api",
										"doctors"
									]
								}
							},
							"response": []
						},
						{
							"name": "(Dean) Update Doctor",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "676e0052-b529-4485-91fb-02c0ce958a2a",
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"    pm.response.to.be.ok;\r",
											"    pm.response.to.be.json;\r",
											"})\r",
											"\r",
											"pm.test(\"Doctor as object\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.doctor).to.be.an('object');\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PATCH",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"name\": \"Dr. Sparrow\",\r\n    \"age\": 42\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{heroku_url}}/api/doctors/2",
									"host": [
										"{{heroku_url}}"
									],
									"path": [
										"api",
										"doctors",
										"2"
									]
								},
								"description": "Update the medication of a patient."
							},
							"response": []
						},
						{
							"name": "(Dean) Delete Doctor",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "c709ecfc-3803-45c3-917c-601dec5e0e4a",
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"    pm.response.to.be.ok;\r",
											"    pm.response.to.be.json;\r",
											"})\r",
											"\r",
											"pm.test(\"Doctor ID is 2\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.doctor_id).to.equal(2);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{heroku_url}}/api/doctors/2",
									"host": [
										"{{heroku_url}}"
									],
									"path": [
										"api",
										"doctors",
										"2"
									]
								}
							},
							"response": []
						}
					],
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "57652a3b-3152-47b1-b5a4-85d6fb5240d4",
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "9f78d77b-d941-40a8-a6d4-a40a5aa2b615",
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				}
			],
			"description": "The expected API behaviour for the role Nurse",
			"auth": {
				"type": "bearer",
				"bearer": [
					{
						"key": "token",
						"value": "{{dean_bearer_token}}",
						"type": "string"
					}
				]
			},
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"id": "b422b8de-5c60-4c77-b93f-813244e09a41",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"id": "9eeec7de-a974-4705-91ac-6479f00e350e",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			],
			"protocolProfileBehavior": {}
		}
	],
	"protocolProfileBehavior": {}
}