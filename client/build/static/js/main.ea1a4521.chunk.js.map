{"version":3,"sources":["shared/auth.js","components/Header.js","containers/Layout/Layout.js","components/404.js","components/HomePage.js","components/Callback.js","components/Patient/PatientListItem.js","shared/axios.js","containers/Patient/PatientsPage.js","components/Patient/PatientItem.js","containers/Patient/PatientPage.js","components/Doctor/DoctorListItem.js","containers/Doctor/DoctorsPage.js","components/Doctor/DoctorItem.js","containers/Doctor/DoctorPage.js","App.js","serviceWorker.js","index.js"],"names":["loginUrl","process","userInfoUrl","Header","Layout","HeaderComponent","props","useState","currentUser","state","setState","useEffect","localStorage","getItem","token","axios","get","headers","getCurrentUser","then","res","data","menu","theme","mode","style","float","Item","key","href","to","onClick","removeItem","placement","color","title","marginRight","src","picture","name","maxWidth","margin","className","Content","Footer","MyLayout","padding","children","textAlign","NoMatch","location","useLocation","pathname","type","Paragraph","Typography","Home","content","jwtLink","ellipsis","rows","expandable","symbol","target","rel","Callback","hash_arr","hash","split","token_arr","setItem","Patient","item","id","doctor_name","getBackendAxios","create","baseURL","PatientsPage","currentPage","setCurrentPage","catch","err","history","push","message","error","list","header","info","shape","icon","PlusOutlined","footer","defaultCurrent","showTotal","total","range","onChange","page","total_patients","itemLayout","dataSource","patients","renderItem","Panel","Collapse","treatedBy","doctor","medication","length","medicationBlob","medicationJson","JSON","parse","bordered","units","parseMedication","ghost","onBack","window","back","subTitle","extra","danger","onDelete","onEdit","column","label","age","gender","patient","setPatient","match","params","success","PatientItem","loading","delete","Doctor","patients_count","DoctorsPage","total_doctors","doctors","patientCount","setDoctor","DoctorItem","App","path","exact","component","Patients","Doctors","Boolean","hostname","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","console"],"mappings":"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","file":"static/js/main.ea1a4521.chunk.js","sourcesContent":["import axios from \"axios\";\r\n\r\nexport const loginUrl = `https://${process.env.REACT_APP_AUTH0_DOMAIN}/authorize?audience=${process.env.REACT_APP_AUDIENCE}&response_type=token&client_id=${process.env.REACT_APP_CLIENT_ID}&redirect_uri=${process.env.REACT_APP_REDIRECT_URI}&scope=openid%20profile`\r\n\r\nconst userInfoUrl = `https://${process.env.REACT_APP_AUTH0_DOMAIN}/userinfo`\r\n\r\nexport const getCurrentUser = () => {\r\n    var token = localStorage.getItem(\"bearer_token\")\r\n    return axios.get(\r\n        userInfoUrl,\r\n        {\r\n            headers: { \"Authorization\": `Bearer ${token}` }\r\n        }\r\n    )\r\n}\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Layout, Menu, Tooltip, Avatar } from \"antd\";\r\n\r\nimport { loginUrl, getCurrentUser } from \"../shared/auth\";\r\n\r\nconst { Header } = Layout;\r\n\r\nconst HeaderComponent = (props) => {\r\n  const [state, setState] = useState({\r\n    currentUser: null\r\n  });\r\n\r\n  useEffect(() => {\r\n    if (localStorage.getItem(\"bearer_token\") != null) {\r\n      getCurrentUser().then(res => {\r\n        setState({\r\n          currentUser: res.data\r\n        })\r\n      })\r\n    }\r\n  }, [])\r\n\r\n  const logout = () => {\r\n    setState({\r\n      currentUser: null\r\n    });\r\n    localStorage.removeItem(\"bearer_token\");\r\n  }\r\n\r\n  let menu = (\r\n    <Menu\r\n      theme=\"dark\"\r\n      mode=\"horizontal\"\r\n      style={{ float: \"right\" }}\r\n    >\r\n      <Menu.Item key=\"1\">\r\n        <a href={loginUrl}>Login / Signup</a>\r\n      </Menu.Item>\r\n    </Menu>\r\n  )\r\n  if (state.currentUser != null) {\r\n\r\n    menu = (\r\n      <Menu\r\n        theme=\"dark\"\r\n        mode=\"horizontal\"\r\n        style={{ float: \"right\" }}\r\n      >\r\n        <Menu.Item key=\"1\">\r\n          <Link to=\"/patients\">Patients</Link>\r\n        </Menu.Item>\r\n        <Menu.Item key=\"2\">\r\n          <Link to=\"/doctors\">Doctors</Link>\r\n        </Menu.Item>\r\n        <Menu.Item key=\"3\" onClick={logout}>\r\n          <Tooltip\r\n            placement=\"bottom\"\r\n            color={'#f50'}\r\n            title={\"Click to logout!\"}\r\n          >\r\n            <Avatar style={{ marginRight: \"6px\" }} src={state.currentUser.picture} />\r\n            {`Hello, ${state.currentUser.name}`}\r\n          </Tooltip>\r\n        </Menu.Item>\r\n      </Menu>\r\n    )\r\n  }\r\n\r\n  return (\r\n    <Header>\r\n      <div style={{\r\n        maxWidth: \"800px\",\r\n        margin: \"0 auto\"\r\n      }}>\r\n        <Link to=\"/\"><div className=\"logo\" /></Link>\r\n        {menu}\r\n      </div>\r\n    </Header>\r\n  );\r\n};\r\n\r\nexport default HeaderComponent;\r\n","import React from \"react\";\r\nimport { BrowserRouter as Router } from \"react-router-dom\";\r\nimport { Layout } from \"antd\";\r\n\r\nimport \"./Layout.css\";\r\nimport NavBar from \"../../components/Header\";\r\n\r\nconst { Content, Footer } = Layout;\r\n\r\nconst MyLayout = (props) => {\r\n    return (\r\n        <Router>\r\n            <Layout className=\"layout\">\r\n                <NavBar />\r\n                <Content style={{ padding: \"0 50px\" }}>\r\n                    {props.children}\r\n                </Content>\r\n                <Footer style={{ textAlign: \"center\" }}>\r\n                    Developed by Biswas Nandamuri\r\n            </Footer>\r\n            </Layout>\r\n        </Router>\r\n    )\r\n};\r\n\r\nexport default MyLayout;","import React from \"react\";\r\nimport { Link, useLocation } from \"react-router-dom\";\r\nimport { Button } from \"antd\";\r\n\r\nconst NoMatch = () => {\r\n    const location = useLocation();\r\n    return (\r\n        <div className=\"site-layout-content\">\r\n            <div style={{ maxWidth: \"450px\", margin: \"0 auto\", textAlign: \"center\" }}>\r\n                <h3>\r\n                    No match for route <code>{location.pathname}</code>\r\n                </h3>\r\n                <Link to=\"/\">\r\n                    <Button type=\"primary\">Back to Home</Button>\r\n                </Link>\r\n            </div>\r\n        </div>\r\n    );\r\n\r\n}\r\n\r\nexport default NoMatch;","import React from \"react\";\r\nimport { Typography, Divider } from 'antd';\r\n\r\nconst { Paragraph } = Typography;\r\n\r\n\r\nconst Home = () => {\r\n  const token = localStorage.getItem(\"bearer_token\")\r\n\r\n  let content = (\r\n    <>\r\n      <p>Please login using the following credentials</p>\r\n      <p>Username: <strong>dean@test.com</strong> <br /> Password: <strong>Dean@123</strong></p>\r\n      <p>or</p>\r\n      <p>Username: <strong>doctor@test.com</strong> <br /> Password: <strong>Doctor@123</strong></p>\r\n      <p>or</p>\r\n      <p>Username: <strong>nurse@test.com</strong> <br /> Password: <strong>Nurse@123</strong></p>\r\n    </>\r\n  )\r\n  if (token != null) {\r\n    const jwtLink = `https://jwt.io/#debugger-io?token=${token}`;\r\n    content = (\r\n      <>\r\n        <p>Store the below bearer token somewhere, it is <strong>needed during testing</strong> <br />if the submitted tokens are expired.</p>\r\n        <Divider>Token Start</Divider>\r\n        <Paragraph ellipsis={{ rows: 3, expandable: true, symbol: 'more' }}>\r\n          {token}\r\n        </Paragraph>\r\n        <Divider>Token End</Divider>\r\n        <p>Check auth token in <a href={jwtLink} target=\"_blank\"  rel=\"noopener noreferrer\">jwt.io</a></p>\r\n      </>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className=\"site-layout-content\">\r\n      <div style={{ maxWidth: \"450px\", margin: \"0 auto\", textAlign: \"center\" }}>\r\n        {content}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n","import React from \"react\";\r\nimport { Redirect } from \"react-router-dom\";\r\n\r\nconst Callback = (props) => {\r\n    var hash = props.location.hash;\r\n    var hash_arr = hash.split(\"&\")\r\n    if (hash_arr[3] === \"token_type=Bearer\") {\r\n        var token_arr = hash_arr[0].split(\"=\")\r\n        localStorage.setItem('bearer_token', token_arr[1])\r\n    }\r\n\r\n    return (\r\n        <Redirect to=\"/\" />\r\n    )\r\n}\r\n\r\nexport default Callback","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { List } from 'antd';\r\n\r\nconst Patient = (item) => (\r\n  <List.Item key={item.id}>\r\n    <h3><Link to={`/patients/${item.id}`}>{item.name}</Link></h3>\r\n    {\r\n      item.doctor_name ? \r\n      <p>Treated by <strong>{item.doctor_name}</strong></p> :\r\n      <p>Yet to be treated.</p>\r\n    }\r\n  </List.Item>\r\n);\r\n\r\nexport default Patient;","import axios from 'axios';\r\n\r\nconst getBackendAxios = () => {\r\n    return axios.create({\r\n        baseURL: `${process.env.REACT_APP_BACKEND}/api`,\r\n        headers:{\r\n            \"Authorization\": `Bearer ${localStorage.getItem(\"bearer_token\")}`\r\n        }\r\n    })\r\n}\r\n\r\nexport default getBackendAxios;","import React, { useEffect, useState } from \"react\";\r\nimport { List, Pagination, Button, message } from 'antd';\r\nimport { PlusOutlined } from '@ant-design/icons';\r\n\r\nimport Patient from \"../../components/Patient/PatientListItem\";\r\nimport getBackendAxios from \"../../shared/axios\";\r\n\r\n\r\nconst PatientsPage = (props) => {\r\n    const [currentPage, setCurrentPage] = useState(1)\r\n    const [state, setState] = useState({\r\n        \"data\": null\r\n    });\r\n    useEffect(() => {\r\n        var backend = getBackendAxios()\r\n        backend.get(`/patients?page=${currentPage}`)\r\n            .then(res => {\r\n                setState({\r\n                    \"data\": res.data\r\n                })\r\n            })\r\n            .catch(err => {\r\n                props.history.push(\"/\");\r\n                message.error(\"Please login first\");\r\n            });\r\n    }, [currentPage, props.history])\r\n\r\n    let list = (<p>Loading...</p>)\r\n    if (state.data != null) {\r\n        list = (\r\n            <List\r\n                header={\r\n                    <h2>\r\n                        All Patients <Button\r\n                                onClick={() => (message.info(\"Sorry! Not yet implemented\"))}\r\n                                style={{ float: \"right\" }}\r\n                                type=\"primary\"\r\n                                shape=\"round\"\r\n                                icon={<PlusOutlined />}>\r\n                                Create New\r\n                            </Button>\r\n                    </h2>\r\n                }\r\n                footer={\r\n                    <Pagination\r\n                        defaultCurrent={currentPage}\r\n                        showTotal={(total, range) => `${range[0]}-${range[1]} of ${total} patients`}\r\n                        onChange={page => setCurrentPage(page)}\r\n                        total={state.data.total_patients} />\r\n                }\r\n                itemLayout=\"horizontal\"\r\n                dataSource={state.data.patients}\r\n                renderItem={Patient}\r\n            />\r\n        )\r\n    }\r\n\r\n    return (\r\n        <div className=\"site-layout-content\">\r\n            {list}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default PatientsPage;\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { PageHeader, Button, Descriptions, Collapse, List } from 'antd';\r\n\r\nconst { Panel } = Collapse;\r\n\r\nfunction parseMedication(medicationBlob) {\r\n    const medicationJson = JSON.parse(medicationBlob)\r\n    return (\r\n        <List\r\n            bordered\r\n            dataSource={medicationJson}\r\n            renderItem={item => (\r\n                <List.Item>\r\n                    {item.name} - {item.units}\r\n                </List.Item>\r\n            )}\r\n        />\r\n    )\r\n}\r\n\r\n\r\nconst Patient = props => {\r\n    const treatedBy = props.data.doctor == null ?\r\n        \"Yet to be treated\" :\r\n        (\r\n            <>\r\n                Treated by <Link\r\n                    to={`/doctors/${props.data.doctor.id}`}>\r\n                        {props.data.doctor.name}\r\n                    </Link>\r\n            </>\r\n        )\r\n    let medication = \"Nothing listed...\"\r\n    if (props.data.medication.length !== 0) {\r\n        medication = parseMedication(props.data.medication)\r\n    }\r\n\r\n    return (\r\n        <PageHeader\r\n            ghost={false}\r\n            onBack={() => window.history.back()}\r\n            title={props.data.name}\r\n            subTitle={treatedBy}\r\n            extra={[\r\n                <Button key=\"2\" danger onClick={props.onDelete}>Delete</Button>,\r\n                <Button key=\"1\" type=\"primary\" onClick={props.onEdit}>Edit</Button>,\r\n            ]}\r\n        >\r\n            <Descriptions column={2}>\r\n                <Descriptions.Item label=\"Age\">{props.data.age}</Descriptions.Item>\r\n                <Descriptions.Item label=\"Gender\">{props.data.gender}</Descriptions.Item>\r\n            </Descriptions>\r\n            <Collapse>\r\n                <Panel header=\"Medication\" key=\"1\">\r\n                    {medication}\r\n                </Panel>\r\n            </Collapse>\r\n        </PageHeader>\r\n    )\r\n};\r\n\r\nexport default Patient;","import React, {useState, useEffect} from \"react\";\r\nimport { message } from \"antd\";\r\n\r\nimport PatientItem from \"../../components/Patient/PatientItem\";\r\nimport getBackendAxios from \"../../shared/axios\";\r\n\r\nconst Patient = (props) => {\r\n    const [patient, setPatient] = useState(null)\r\n    useEffect(() => {\r\n        var backend = getBackendAxios();\r\n        backend.get(`/patients/${props.match.params.id}`)\r\n            .then(res => {\r\n                if (res.data.success) {\r\n                    setPatient(res.data.patient)\r\n                }\r\n            })\r\n            .catch(err => {\r\n                props.history.push(\"/\");\r\n                message.error(\"Please login first\");\r\n            });;\r\n    }, [props.match.params.id, props.history])\r\n\r\n    const onDeleteHandler = () => {\r\n        message.loading('Deleting...');\r\n        var backend = getBackendAxios();\r\n        backend.delete(`/patients/${props.match.params.id}`)\r\n            .then(res => {\r\n                message.info('Deleted patient');\r\n                props.history.push(\"/patients\");\r\n            })\r\n            .catch(err => {\r\n                message.error('Error while deleting patient');\r\n            });\r\n    }\r\n\r\n    return (\r\n        <div className=\"site-layout-content\">\r\n            {\r\n                patient != null ?\r\n                <PatientItem\r\n                    data={patient}\r\n                    onDelete={onDeleteHandler}\r\n                    onEdit={() => (message.info(\"Sorry! Not yet implemented\"))}\r\n                /> :\r\n                <p>Loading...</p>\r\n            }\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default Patient;","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { List } from 'antd';\r\n\r\nconst Doctor = (item) => (\r\n  <List.Item key={item.id}>\r\n    <h3><Link to={`/doctors/${item.id}`}>{item.name}</Link></h3>\r\n    <p>Patients count: {item.patients_count}</p>\r\n  </List.Item>\r\n);\r\n\r\nexport default Doctor;","import React, { useEffect, useState } from \"react\";\r\nimport { List, Pagination, Button, message } from 'antd';\r\nimport { PlusOutlined } from '@ant-design/icons';\r\n\r\nimport Doctor from \"../../components/Doctor/DoctorListItem\";\r\nimport getBackendAxios from \"../../shared/axios\";\r\n\r\nconst DoctorsPage = (props) => {\r\n    const [currentPage, setCurrentPage] = useState(1)\r\n    const [state, setState] = useState({\r\n        \"data\": null\r\n    });\r\n    useEffect(() => {\r\n        var backend = getBackendAxios()\r\n        backend.get(`/doctors?page=${currentPage}`)\r\n            .then(res => {\r\n                setState({\r\n                    \"data\": res.data\r\n                })\r\n            })\r\n            .catch(err => {\r\n                props.history.push(\"/\");\r\n                message.error(\"Please login first\");\r\n            });\r\n    }, [currentPage, props.history])\r\n\r\n    let list = (<p>Loading...</p>)\r\n    if (state.data != null) {\r\n        list = (\r\n            <List\r\n                header={\r\n                    <h2>\r\n                        All Doctors <Button\r\n                                onClick={() => (message.info(\"Sorry! Not yet implemented\"))}\r\n                                style={{ float: \"right\" }}\r\n                                type=\"primary\"\r\n                                shape=\"round\"\r\n                                icon={<PlusOutlined />}>\r\n                                Create New\r\n                            </Button>\r\n                    </h2>\r\n                }\r\n                footer={\r\n                    <Pagination\r\n                        defaultCurrent={currentPage}\r\n                        showTotal={(total, range) => `${range[0]}-${range[1]} of ${total} patients`}\r\n                        onChange={page => setCurrentPage(page)}\r\n                        total={state.data.total_doctors} />\r\n                }\r\n                itemLayout=\"horizontal\"\r\n                dataSource={state.data.doctors}\r\n                renderItem={Doctor}\r\n            />\r\n        )\r\n    }\r\n\r\n    return (\r\n        <div className=\"site-layout-content\">\r\n            {list}\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default DoctorsPage;\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { PageHeader, Button, Descriptions, Collapse, List } from 'antd';\r\n\r\nconst { Panel } = Collapse;\r\n\r\n\r\nconst Doctor = props => {\r\n    let patients = (\r\n        <List\r\n            bordered\r\n            dataSource={props.data.patients}\r\n            renderItem={item => (\r\n                <List.Item>\r\n                    <Link to={`/patients/${item.id}`}>{item.name}</Link>\r\n                </List.Item>\r\n            )}\r\n        />\r\n    );\r\n\r\n    let patientCount = \"Treated \" + props.data.patients.length + \" patients\"\r\n\r\n    return (\r\n        <PageHeader\r\n            ghost={false}\r\n            onBack={() => window.history.back()}\r\n            title={props.data.name}\r\n            subTitle={patientCount}\r\n            extra={[\r\n                <Button key=\"2\" danger onClick={props.onDelete}>Delete</Button>,\r\n                <Button key=\"1\" type=\"primary\" onClick={props.onEdit}>Edit</Button>,\r\n            ]}\r\n        >\r\n            <Descriptions column={2}>\r\n                <Descriptions.Item label=\"Age\">{props.data.age}</Descriptions.Item>\r\n            </Descriptions>\r\n            <Collapse>\r\n                <Panel header=\"Patients\" key=\"1\">\r\n                    {patients}\r\n                </Panel>\r\n            </Collapse>\r\n        </PageHeader>\r\n    )\r\n};\r\n\r\nexport default Doctor;","import React, {useState, useEffect} from \"react\";\r\nimport { message } from \"antd\";\r\n\r\nimport DoctorItem from \"../../components/Doctor/DoctorItem\";\r\nimport getBackendAxios from \"../../shared/axios\";\r\n\r\nconst Doctor = (props) => {\r\n    const [doctor, setDoctor] = useState(null)\r\n    useEffect(() => {\r\n        var backend = getBackendAxios()\r\n        backend.get(`/doctors/${props.match.params.id}`)\r\n            .then(res => {\r\n                if (res.data.success) {\r\n                    setDoctor(res.data.doctor)\r\n                }\r\n            })\r\n            .catch(err => {\r\n                props.history.push(\"/\");\r\n                message.error(\"Please login first\");\r\n            });\r\n    }, [props.match.params.id, props.history])\r\n\r\n    const onDeleteHandler = () => {\r\n        message.loading('Deleting...');\r\n        var backend = getBackendAxios();\r\n        backend.delete(`/doctors/${props.match.params.id}`)\r\n            .then(res => {\r\n                message.info('Deleted doctor and associated patients');\r\n                props.history.push(\"/doctors\");\r\n            })\r\n            .catch(err => {\r\n                message.error('Error while deleting patient');\r\n            });\r\n    }\r\n\r\n    return (\r\n        <div className=\"site-layout-content\">\r\n            {\r\n                doctor != null ?\r\n                <DoctorItem\r\n                    data={doctor}\r\n                    onDelete={onDeleteHandler}\r\n                    onEdit={() => (message.info(\"Sorry! Not yet implemented\"))}\r\n                /> :\r\n                <p>Loading...</p>\r\n            }\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default Doctor;","import React from \"react\";\r\nimport { Switch, Route } from \"react-router-dom\";\r\n\r\nimport \"./App.css\";\r\nimport MyLayout from \"./containers/Layout/Layout\";\r\nimport NoMatch from \"./components/404\";\r\n\r\nimport Home from \"./components/HomePage\";\r\nimport Callback from \"./components/Callback\";\r\nimport Patients from \"./containers/Patient/PatientsPage\";\r\nimport Patient from \"./containers/Patient/PatientPage\";\r\nimport Doctors from \"./containers/Doctor/DoctorsPage\";\r\nimport Doctor from \"./containers/Doctor/DoctorPage\";\r\n\r\n\r\nfunction App() {\r\n  return (\r\n    <MyLayout>\r\n      <Switch>\r\n        <Route path=\"/\" exact component={Home} />\r\n        <Route path=\"/callback\" component={Callback} />\r\n        <Route path=\"/patients\" exact component={Patients} />\r\n        <Route path=\"/patients/:id\" component={Patient} />\r\n        <Route path=\"/doctors\" exact component={Doctors} />\r\n        <Route path=\"/doctors/:id\" component={Doctor} />\r\n        <Route component={NoMatch} />\r\n      </Switch>\r\n    </MyLayout>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n    <App />,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}